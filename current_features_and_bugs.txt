Current Galant bugs and features (v5.2.1): *** outdated ***

Features:
—————————-

- an array with node or edge indices can now be handled as follows:
	type A[] = new type[nodeIds()]  // allocates enough space for largest id
    type x = A[id(n)]               // access element corresponding to node n
Here A is an array of elements of the given type


Either Feature or Bug:
—————————————————————— 

- if user creates a node using ctrl-n while in create edge mode, the node is created with an edge attached to it

- modes are annoying; if you happen to be in add node, add edge, or, worse, delete mode, you can easily forget and accidentally do something unintended; editing needs to be mode free; the best way to do this is to emulate the keyboard shortcuts via mouse "commands", i.e., use the shift and/or ctrl keys along with mouse clicks

- boolean values default to false if they're missing; might have unintended side effects

- binary_tree, when started with a nonempty graph, simply adds nodes and edges to it; the alternative is either to blow it away or create a new graph on the fly

Bugs:
————-

- periodically, there is an exception involving a "glyph" (when you look at More Information); just hit "Continue" and there do not appear to be ill effects.

- display states keep incrementing after algorithm is through running even though the forward button is greyed out; probably an easy fix

- syntax highlighting for algorithm methods needs to be updated

- attributes other than the essential ones go away if any editing takes place; need to examine what happens when the dispatcher pushes changes

- id's, sources, and targets for edges end up being duplicated when a graph is exported during execution

- it sometimes does not work to enter weights in the text field; observed for nodes only so far; another reason to dispense with the spinner

